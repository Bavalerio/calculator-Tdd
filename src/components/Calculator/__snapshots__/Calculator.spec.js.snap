// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`mounted Calculator should render correctly 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <Calculator />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": Calculator {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 488,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 487,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 485,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="calculator-container"
                >
                  <div
                    class="display-container"
                  >
                    <p
                      class="display-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="keypad-container"
                  >
                    <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>
                    <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>
                    <div
                      class="submit-container"
                    >
                      <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 20,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 485,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="calculator-container"
                >
                  <div
                    class="display-container"
                  >
                    <p
                      class="display-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="keypad-container"
                  >
                    <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>
                    <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>
                    <div
                      class="submit-container"
                    >
                      <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 20,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 489,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
            "lineNumber": 60,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 490,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
              "lineNumber": 61,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 492,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Display\\\\Display.jsx",
                "lineNumber": 7,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 493,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Display\\\\Display.jsx",
                  "lineNumber": 8,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "0",
                  "className": "display-value",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "0",
                  "className": "display-value",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <p
                  class="display-value"
                >
                  0
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": "div",
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": <p
                  className="display-value"
                >
                  0
                </p>,
                "className": "display-container",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <p
                  className="display-value"
                >
                  0
                </p>,
                "className": "display-container",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <div
                class="display-container"
              >
                <p
                  class="display-value"
                >
                  0
                </p>
              </div>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "div",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "displayValue": "0",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "displayValue": "0",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 491,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
                "lineNumber": 62,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 494,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                  "lineNumber": 33,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 495,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                    "lineNumber": 34,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 498,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                      "lineNumber": 15,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 509,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                        "lineNumber": 6,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 510,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                          "lineNumber": 10,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "p",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "9",
                          "className": "key-value",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "9",
                          "className": "key-value",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <p
                          class="key-value"
                        >
                          9
                        </p>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <p
                          className="key-value"
                        >
                          9
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <p
                          className="key-value"
                        >
                          9
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": "9",
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "9",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "9",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 499,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                        "lineNumber": 15,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 511,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                          "lineNumber": 6,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 512,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 10,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "8",
                            "className": "key-value",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "8",
                            "className": "key-value",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="key-value"
                          >
                            8
                          </p>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            8
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            8
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": "8",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "8",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "8",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 500,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 15,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 513,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 6,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 514,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 10,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "7",
                              "className": "key-value",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "7",
                              "className": "key-value",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="key-value"
                            >
                              7
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              7
                            </p>,
                            "className": "key-container number-key",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              7
                            </p>,
                            "className": "key-container number-key",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              7
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": "7",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "keyAction": [Function],
                          "keyType": "number-key",
                          "keyValue": "7",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyAction": [Function],
                          "keyType": "number-key",
                          "keyValue": "7",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 501,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                            "lineNumber": 15,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 515,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 516,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 10,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "6",
                                "className": "key-value",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "6",
                                "className": "key-value",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="key-value"
                              >
                                6
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                6
                              </p>,
                              "className": "key-container number-key",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                6
                              </p>,
                              "className": "key-container number-key",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="key-container number-key"
                            >
                              <p
                                class="key-value"
                              >
                                6
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 3,
                          "key": "6",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "keyAction": [Function],
                            "keyType": "number-key",
                            "keyValue": "6",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "keyAction": [Function],
                            "keyType": "number-key",
                            "keyValue": "6",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 502,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                              "lineNumber": 15,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 517,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 6,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 518,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 10,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "5",
                                  "className": "key-value",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "5",
                                  "className": "key-value",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p
                                  class="key-value"
                                >
                                  5
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  5
                                </p>,
                                "className": "key-container number-key",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  5
                                </p>,
                                "className": "key-container number-key",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="key-container number-key"
                              >
                                <p
                                  class="key-value"
                                >
                                  5
                                </p>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 4,
                            "key": "5",
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "keyAction": [Function],
                              "keyType": "number-key",
                              "keyValue": "5",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "keyAction": [Function],
                              "keyType": "number-key",
                              "keyValue": "5",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 503,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                "lineNumber": 15,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 519,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 6,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 520,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                    "lineNumber": 10,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "4",
                                    "className": "key-value",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "4",
                                    "className": "key-value",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p
                                    class="key-value"
                                  >
                                    4
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    4
                                  </p>,
                                  "className": "key-container number-key",
                                  "onClick": [Function],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    4
                                  </p>,
                                  "className": "key-container number-key",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="key-container number-key"
                                >
                                  <p
                                    class="key-value"
                                  >
                                    4
                                  </p>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 5,
                              "key": "4",
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "keyAction": [Function],
                                "keyType": "number-key",
                                "keyValue": "4",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "keyAction": [Function],
                                "keyType": "number-key",
                                "keyValue": "4",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 504,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                  "lineNumber": 15,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 521,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                    "lineNumber": 6,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 522,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                      "lineNumber": 10,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "p",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "3",
                                      "className": "key-value",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "3",
                                      "className": "key-value",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <p
                                      class="key-value"
                                    >
                                      3
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "div",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <p
                                      className="key-value"
                                    >
                                      3
                                    </p>,
                                    "className": "key-container number-key",
                                    "onClick": [Function],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <p
                                      className="key-value"
                                    >
                                      3
                                    </p>,
                                    "className": "key-container number-key",
                                    "onClick": [Function],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <div
                                    class="key-container number-key"
                                  >
                                    <p
                                      class="key-value"
                                    >
                                      3
                                    </p>
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 1,
                                "elementType": [Function],
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 6,
                                "key": "3",
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "keyAction": [Function],
                                  "keyType": "number-key",
                                  "keyValue": "3",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "keyAction": [Function],
                                  "keyType": "number-key",
                                  "keyValue": "3",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 505,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                    "lineNumber": 15,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 523,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                      "lineNumber": 6,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 524,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                        "lineNumber": 10,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "p",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "2",
                                        "className": "key-value",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "2",
                                        "className": "key-value",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <p
                                        class="key-value"
                                      >
                                        2
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "div",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": <p
                                        className="key-value"
                                      >
                                        2
                                      </p>,
                                      "className": "key-container number-key",
                                      "onClick": [Function],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <p
                                        className="key-value"
                                      >
                                        2
                                      </p>,
                                      "className": "key-container number-key",
                                      "onClick": [Function],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="key-container number-key"
                                    >
                                      <p
                                        class="key-value"
                                      >
                                        2
                                      </p>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 1,
                                  "elementType": [Function],
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 7,
                                  "key": "2",
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "keyAction": [Function],
                                    "keyType": "number-key",
                                    "keyValue": "2",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyAction": [Function],
                                    "keyType": "number-key",
                                    "keyValue": "2",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 506,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                      "lineNumber": 15,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 525,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                        "lineNumber": 6,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 526,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                          "lineNumber": 10,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "p",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 0,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "1",
                                          "className": "key-value",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "1",
                                          "className": "key-value",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <p
                                          class="key-value"
                                        >
                                          1
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "div",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": <p
                                          className="key-value"
                                        >
                                          1
                                        </p>,
                                        "className": "key-container number-key",
                                        "onClick": [Function],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": <p
                                          className="key-value"
                                        >
                                          1
                                        </p>,
                                        "className": "key-container number-key",
                                        "onClick": [Function],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="key-container number-key"
                                      >
                                        <p
                                          class="key-value"
                                        >
                                          1
                                        </p>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 1,
                                    "elementType": [Function],
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 8,
                                    "key": "1",
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "keyAction": [Function],
                                      "keyType": "number-key",
                                      "keyValue": "1",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "keyAction": [Function],
                                      "keyType": "number-key",
                                      "keyValue": "1",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 507,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                        "lineNumber": 15,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 527,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                          "lineNumber": 6,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 528,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                            "lineNumber": 10,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "p",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 0,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "0",
                                            "className": "key-value",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "0",
                                            "className": "key-value",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <p
                                            class="key-value"
                                          >
                                            0
                                          </p>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "p",
                                          "updateQueue": null,
                                        },
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "div",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 0,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": <p
                                            className="key-value"
                                          >
                                            0
                                          </p>,
                                          "className": "key-container number-key",
                                          "onClick": [Function],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": <p
                                            className="key-value"
                                          >
                                            0
                                          </p>,
                                          "className": "key-container number-key",
                                          "onClick": [Function],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="key-container number-key"
                                        >
                                          <p
                                            class="key-value"
                                          >
                                            0
                                          </p>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 1,
                                      "elementType": [Function],
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 9,
                                      "key": "0",
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "keyAction": [Function],
                                        "keyType": "number-key",
                                        "keyValue": "0",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "keyAction": [Function],
                                        "keyType": "number-key",
                                        "keyValue": "0",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 508,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                          "lineNumber": 15,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 529,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                            "lineNumber": 6,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 530,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                              "lineNumber": 10,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "contextDependencies": null,
                                            "effectTag": 0,
                                            "elementType": "p",
                                            "expirationTime": 0,
                                            "firstEffect": null,
                                            "index": 0,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "ce",
                                              "className": "key-value",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "ce",
                                              "className": "key-value",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": <p
                                              class="key-value"
                                            >
                                              ce
                                            </p>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "p",
                                            "updateQueue": null,
                                          },
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "div",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 0,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": <p
                                              className="key-value"
                                            >
                                              ce
                                            </p>,
                                            "className": "key-container number-key",
                                            "onClick": [Function],
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": <p
                                              className="key-value"
                                            >
                                              ce
                                            </p>,
                                            "className": "key-container number-key",
                                            "onClick": [Function],
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <div
                                            class="key-container number-key"
                                          >
                                            <p
                                              class="key-value"
                                            >
                                              ce
                                            </p>
                                          </div>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "div",
                                          "updateQueue": null,
                                        },
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 1,
                                        "elementType": [Function],
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 10,
                                        "key": "ce",
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "keyAction": [Function],
                                          "keyType": "number-key",
                                          "keyValue": "ce",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "keyAction": [Function],
                                          "keyType": "number-key",
                                          "keyValue": "ce",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": null,
                                        "tag": 0,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": null,
                                      },
                                      "stateNode": null,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "stateNode": null,
                                    "tag": 0,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": null,
                                  },
                                  "stateNode": null,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "stateNode": null,
                    "tag": 0,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="9"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="8"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="7"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="6"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="5"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="4"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="3"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="2"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="1"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="0"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="ce"
                      />,
                    ],
                    "className": "numbers-container",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="9"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="8"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="7"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="6"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="5"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="4"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="3"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="2"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="1"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="0"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="ce"
                      />,
                    ],
                    "className": "numbers-container",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 496,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                      "lineNumber": 37,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 531,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                        "lineNumber": 24,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 535,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                          "lineNumber": 6,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 536,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 10,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "/",
                            "className": "key-value",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "/",
                            "className": "key-value",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="key-value"
                          >
                            /
                          </p>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            /
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            /
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": "/",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "/",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "/",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 532,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 537,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 6,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 538,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 10,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "x",
                              "className": "key-value",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "x",
                              "className": "key-value",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="key-value"
                            >
                              x
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              x
                            </p>,
                            "className": "key-container operator-key",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              x
                            </p>,
                            "className": "key-container operator-key",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              x
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": "x",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "keyAction": [Function],
                          "keyType": "operator-key",
                          "keyValue": "x",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyAction": [Function],
                          "keyType": "operator-key",
                          "keyValue": "x",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 533,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 539,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 540,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 10,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "-",
                                "className": "key-value",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "-",
                                "className": "key-value",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="key-value"
                              >
                                -
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                -
                              </p>,
                              "className": "key-container operator-key",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                -
                              </p>,
                              "className": "key-container operator-key",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="key-container operator-key"
                            >
                              <p
                                class="key-value"
                              >
                                -
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "key": "-",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "keyAction": [Function],
                            "keyType": "operator-key",
                            "keyValue": "-",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "keyAction": [Function],
                            "keyType": "operator-key",
                            "keyValue": "-",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 534,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 541,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 6,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 542,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 10,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "+",
                                  "className": "key-value",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "+",
                                  "className": "key-value",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p
                                  class="key-value"
                                >
                                  +
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  +
                                </p>,
                                "className": "key-container operator-key",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  +
                                </p>,
                                "className": "key-container operator-key",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="key-container operator-key"
                              >
                                <p
                                  class="key-value"
                                >
                                  +
                                </p>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 3,
                            "key": "+",
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "keyAction": [Function],
                              "keyType": "operator-key",
                              "keyValue": "+",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "keyAction": [Function],
                              "keyType": "operator-key",
                              "keyValue": "+",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="/"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="x"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="-"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="+"
                        />,
                      ],
                      "className": "operators-container",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="/"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="x"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="-"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="+"
                        />,
                      ],
                      "className": "operators-container",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 497,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                        "lineNumber": 40,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 543,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 41,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 544,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 6,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 545,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 10,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "=",
                              "className": "key-value",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "=",
                              "className": "key-value",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="key-value"
                            >
                              =
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              =
                            </p>,
                            "className": "key-container submit-key",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              =
                            </p>,
                            "className": "key-container submit-key",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "keyAction": [Function],
                          "keyType": "submit-key",
                          "keyValue": "=",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyAction": [Function],
                          "keyType": "submit-key",
                          "keyValue": "=",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": <Key
                          keyAction={[Function]}
                          keyType="submit-key"
                          keyValue="="
                        />,
                        "className": "submit-container",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Key
                          keyAction={[Function]}
                          keyType="submit-key"
                          keyValue="="
                        />,
                        "className": "submit-container",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "stateNode": <div
                    class="numbers-container"
                  >
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        9
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        8
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        7
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        6
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        5
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        4
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        3
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        2
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        1
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        ce
                      </p>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="numbers-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="9"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="8"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="7"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="6"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="5"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="4"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="3"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="2"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="1"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="0"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="ce"
                      />
                    </div>,
                    <div
                      className="operators-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="/"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="x"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="-"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="+"
                      />
                    </div>,
                    <div
                      className="submit-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="submit-key"
                        keyValue="="
                      />
                    </div>,
                  ],
                  "className": "keypad-container",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="numbers-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="9"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="8"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="7"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="6"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="5"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="4"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="3"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="2"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="1"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="0"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="ce"
                      />
                    </div>,
                    <div
                      className="operators-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="/"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="x"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="-"
                      />
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="+"
                      />
                    </div>,
                    <div
                      className="submit-container"
                    >
                      <Key
                        keyAction={[Function]}
                        keyType="submit-key"
                        keyValue="="
                      />
                    </div>,
                  ],
                  "className": "keypad-container",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="keypad-container"
                >
                  <div
                    class="numbers-container"
                  >
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        9
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        8
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        7
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        6
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        5
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        4
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        3
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        2
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        1
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        ce
                      </p>
                    </div>
                  </div>
                  <div
                    class="operators-container"
                  >
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        /
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        x
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        -
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        +
                      </p>
                    </div>
                  </div>
                  <div
                    class="submit-container"
                  >
                    <div
                      class="key-container submit-key"
                    >
                      <p
                        class="key-value"
                      >
                        =
                      </p>
                    </div>
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "callOperator": [Function],
                "numbers": Array [
                  "9",
                  "8",
                  "7",
                  "6",
                  "5",
                  "4",
                  "3",
                  "2",
                  "1",
                  "0",
                  "ce",
                ],
                "operators": Array [
                  "/",
                  "x",
                  "-",
                  "+",
                ],
                "setOperator": [Function],
                "updateDisplay": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "callOperator": [Function],
                "numbers": Array [
                  "9",
                  "8",
                  "7",
                  "6",
                  "5",
                  "4",
                  "3",
                  "2",
                  "1",
                  "0",
                  "ce",
                ],
                "operators": Array [
                  "/",
                  "x",
                  "-",
                  "+",
                ],
                "setOperator": [Function],
                "updateDisplay": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "stateNode": null,
            "tag": 0,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <Display
                displayValue="0"
              />,
              <Keypad
                callOperator={[Function]}
                numbers={
                  Array [
                    "9",
                    "8",
                    "7",
                    "6",
                    "5",
                    "4",
                    "3",
                    "2",
                    "1",
                    "0",
                    "ce",
                  ]
                }
                operators={
                  Array [
                    "/",
                    "x",
                    "-",
                    "+",
                  ]
                }
                setOperator={[Function]}
                updateDisplay={[Function]}
              />,
            ],
            "className": "calculator-container",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <Display
                displayValue="0"
              />,
              <Keypad
                callOperator={[Function]}
                numbers={
                  Array [
                    "9",
                    "8",
                    "7",
                    "6",
                    "5",
                    "4",
                    "3",
                    "2",
                    "1",
                    "0",
                    "ce",
                  ]
                }
                operators={
                  Array [
                    "/",
                    "x",
                    "-",
                    "+",
                  ]
                }
                setOperator={[Function]}
                updateDisplay={[Function]}
              />,
            ],
            "className": "calculator-container",
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div
            class="calculator-container"
          >
            <div
              class="display-container"
            >
              <p
                class="display-value"
              >
                0
              </p>
            </div>
            <div
              class="keypad-container"
            >
              <div
                class="numbers-container"
              >
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    9
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    8
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    7
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    6
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    5
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    4
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    3
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    2
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    1
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    0
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    ce
                  </p>
                </div>
              </div>
              <div
                class="operators-container"
              >
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    /
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    x
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    -
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    +
                  </p>
                </div>
              </div>
              <div
                class="submit-container"
              >
                <div
                  class="key-container submit-key"
                >
                  <p
                    class="key-value"
                  >
                    =
                  </p>
                </div>
              </div>
            </div>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "contextDependencies": null,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {},
        "memoizedState": Object {
          "displayValue": "0",
          "numbers": Array [
            "9",
            "8",
            "7",
            "6",
            "5",
            "4",
            "3",
            "2",
            "1",
            "0",
            "ce",
          ],
          "operators": Array [
            "/",
            "x",
            "-",
            "+",
          ],
          "selectedOperator": "",
          "storedValue": "",
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {},
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 487,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 485,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="calculator-container"
                >
                  <div
                    class="display-container"
                  >
                    <p
                      class="display-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="keypad-container"
                  >
                    <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>
                    <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>
                    <div
                      class="submit-container"
                    >
                      <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 20,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {},
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 485,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={Object {}}
                      wrappingComponentProps={null}
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={Object {}}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div
                  class="calculator-container"
                >
                  <div
                    class="display-container"
                  >
                    <p
                      class="display-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="keypad-container"
                  >
                    <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>
                    <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>
                    <div
                      class="submit-container"
                    >
                      <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>
                    </div>
                  </div>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 20,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "rootFinderInstance": null,
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "callOperator": [Function],
      "context": Object {},
      "props": Object {},
      "refs": Object {},
      "render": [Function],
      "setOperator": [Function],
      "state": Object {
        "displayValue": "0",
        "numbers": Array [
          "9",
          "8",
          "7",
          "6",
          "5",
          "4",
          "3",
          "2",
          "1",
          "0",
          "ce",
        ],
        "operators": Array [
          "/",
          "x",
          "-",
          "+",
        ],
        "selectedOperator": "",
        "storedValue": "",
      },
      "updateDisplay": [Function],
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {},
    "ref": null,
    "rendered": Object {
      "instance": <div
        class="calculator-container"
      >
        <div
          class="display-container"
        >
          <p
            class="display-value"
          >
            0
          </p>
        </div>
        <div
          class="keypad-container"
        >
          <div
            class="numbers-container"
          >
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                9
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                8
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                7
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                6
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                5
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                4
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                3
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                2
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                1
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                0
              </p>
            </div>
            <div
              class="key-container number-key"
            >
              <p
                class="key-value"
              >
                ce
              </p>
            </div>
          </div>
          <div
            class="operators-container"
          >
            <div
              class="key-container operator-key"
            >
              <p
                class="key-value"
              >
                /
              </p>
            </div>
            <div
              class="key-container operator-key"
            >
              <p
                class="key-value"
              >
                x
              </p>
            </div>
            <div
              class="key-container operator-key"
            >
              <p
                class="key-value"
              >
                -
              </p>
            </div>
            <div
              class="key-container operator-key"
            >
              <p
                class="key-value"
              >
                +
              </p>
            </div>
          </div>
          <div
            class="submit-container"
          >
            <div
              class="key-container submit-key"
            >
              <p
                class="key-value"
              >
                =
              </p>
            </div>
          </div>
        </div>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Display
            displayValue="0"
          />,
          <Keypad
            callOperator={[Function]}
            numbers={
              Array [
                "9",
                "8",
                "7",
                "6",
                "5",
                "4",
                "3",
                "2",
                "1",
                "0",
                "ce",
              ]
            }
            operators={
              Array [
                "/",
                "x",
                "-",
                "+",
              ]
            }
            setOperator={[Function]}
            updateDisplay={[Function]}
          />,
        ],
        "className": "calculator-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "displayValue": "0",
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="display-container"
            >
              <p
                class="display-value"
              >
                0
              </p>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <p
                className="display-value"
              >
                0
              </p>,
              "className": "display-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="display-value"
                >
                  0
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "0",
                  "className": "display-value",
                },
                "ref": null,
                "rendered": Array [
                  "0",
                ],
                "type": "p",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "callOperator": [Function],
            "numbers": Array [
              "9",
              "8",
              "7",
              "6",
              "5",
              "4",
              "3",
              "2",
              "1",
              "0",
              "ce",
            ],
            "operators": Array [
              "/",
              "x",
              "-",
              "+",
            ],
            "setOperator": [Function],
            "updateDisplay": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": <div
              class="keypad-container"
            >
              <div
                class="numbers-container"
              >
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    9
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    8
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    7
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    6
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    5
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    4
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    3
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    2
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    1
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    0
                  </p>
                </div>
                <div
                  class="key-container number-key"
                >
                  <p
                    class="key-value"
                  >
                    ce
                  </p>
                </div>
              </div>
              <div
                class="operators-container"
              >
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    /
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    x
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    -
                  </p>
                </div>
                <div
                  class="key-container operator-key"
                >
                  <p
                    class="key-value"
                  >
                    +
                  </p>
                </div>
              </div>
              <div
                class="submit-container"
              >
                <div
                  class="key-container submit-key"
                >
                  <p
                    class="key-value"
                  >
                    =
                  </p>
                </div>
              </div>
            </div>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="numbers-container"
                >
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="9"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="8"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="7"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="6"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="5"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="4"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="3"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="2"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="1"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="0"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="number-key"
                    keyValue="ce"
                  />
                </div>,
                <div
                  className="operators-container"
                >
                  <Key
                    keyAction={[Function]}
                    keyType="operator-key"
                    keyValue="/"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="operator-key"
                    keyValue="x"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="operator-key"
                    keyValue="-"
                  />
                  <Key
                    keyAction={[Function]}
                    keyType="operator-key"
                    keyValue="+"
                  />
                </div>,
                <div
                  className="submit-container"
                >
                  <Key
                    keyAction={[Function]}
                    keyType="submit-key"
                    keyValue="="
                  />
                </div>,
              ],
              "className": "keypad-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="numbers-container"
                >
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      9
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      8
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      7
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      6
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      5
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      4
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      3
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      2
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      1
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      ce
                    </p>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="9"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="8"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="7"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="6"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="5"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="4"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="3"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="2"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="1"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="0"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="ce"
                    />,
                  ],
                  "className": "numbers-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "9",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "9",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          9
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            9
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "9",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "9",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "8",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "8",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          8
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            8
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "8",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "8",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "7",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "7",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          7
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            7
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "7",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "7",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "6",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "6",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          6
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            6
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "6",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "6",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "5",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "5",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          5
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            5
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "5",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "5",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "4",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "4",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          4
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            4
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "4",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "4",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "3",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "3",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          3
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            3
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "3",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "3",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "2",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          2
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            2
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "2",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "2",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "1",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          1
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            1
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "1",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "1",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "0",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          0
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            0
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "0",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "0",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "ce",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "number-key",
                      "keyValue": "ce",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          ce
                        </p>,
                        "className": "key-container number-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            ce
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "ce",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "ce",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="operators-container"
                >
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      /
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      x
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      -
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      +
                    </p>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="/"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="x"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="-"
                    />,
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="+"
                    />,
                  ],
                  "className": "operators-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "/",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "operator-key",
                      "keyValue": "/",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          /
                        </p>,
                        "className": "key-container operator-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            /
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "/",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "/",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "x",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "operator-key",
                      "keyValue": "x",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          x
                        </p>,
                        "className": "key-container operator-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            x
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "x",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "x",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "-",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "operator-key",
                      "keyValue": "-",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          -
                        </p>,
                        "className": "key-container operator-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            -
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "-",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "-",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "+",
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "operator-key",
                      "keyValue": "+",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          +
                        </p>,
                        "className": "key-container operator-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            +
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "+",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "+",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": <div
                  class="submit-container"
                >
                  <div
                    class="key-container submit-key"
                  >
                    <p
                      class="key-value"
                    >
                      =
                    </p>
                  </div>
                </div>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Key
                    keyAction={[Function]}
                    keyType="submit-key"
                    keyValue="="
                  />,
                  "className": "submit-container",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "keyAction": [Function],
                      "keyType": "submit-key",
                      "keyValue": "=",
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": <p
                          className="key-value"
                        >
                          =
                        </p>,
                        "className": "key-container submit-key",
                        "onClick": [Function],
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": <p
                            class="key-value"
                          >
                            =
                          </p>,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "=",
                            "className": "key-value",
                          },
                          "ref": null,
                          "rendered": Array [
                            "=",
                          ],
                          "type": "p",
                        },
                      ],
                      "type": "div",
                    },
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": Calculator {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 488,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 487,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 485,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="calculator-container"
                    >
                      <div
                        class="display-container"
                      >
                        <p
                          class="display-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="keypad-container"
                      >
                        <div
                          class="numbers-container"
                        >
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              9
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              8
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              7
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              6
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              5
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              4
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              3
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              2
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              1
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              0
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              ce
                            </p>
                          </div>
                        </div>
                        <div
                          class="operators-container"
                        >
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              /
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              x
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              -
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              +
                            </p>
                          </div>
                        </div>
                        <div
                          class="submit-container"
                        >
                          <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 20,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 485,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="calculator-container"
                    >
                      <div
                        class="display-container"
                      >
                        <p
                          class="display-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="keypad-container"
                      >
                        <div
                          class="numbers-container"
                        >
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              9
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              8
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              7
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              6
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              5
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              4
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              3
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              2
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              1
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              0
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              ce
                            </p>
                          </div>
                        </div>
                        <div
                          class="operators-container"
                        >
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              /
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              x
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              -
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              +
                            </p>
                          </div>
                        </div>
                        <div
                          class="submit-container"
                        >
                          <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 20,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 489,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
              "lineNumber": 60,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 490,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
                "lineNumber": 61,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 492,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Display\\\\Display.jsx",
                  "lineNumber": 7,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 493,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Display\\\\Display.jsx",
                    "lineNumber": 8,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "0",
                    "className": "display-value",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "0",
                    "className": "display-value",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <p
                    class="display-value"
                  >
                    0
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": <p
                    className="display-value"
                  >
                    0
                  </p>,
                  "className": "display-container",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <p
                    className="display-value"
                  >
                    0
                  </p>,
                  "className": "display-container",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="display-container"
                >
                  <p
                    class="display-value"
                  >
                    0
                  </p>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "displayValue": "0",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "displayValue": "0",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 491,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Calculator\\\\Calculator.jsx",
                  "lineNumber": 62,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 494,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                    "lineNumber": 33,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 495,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                      "lineNumber": 34,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 498,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                        "lineNumber": 15,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 509,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                          "lineNumber": 6,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 510,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 10,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "p",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "9",
                            "className": "key-value",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "9",
                            "className": "key-value",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <p
                            class="key-value"
                          >
                            9
                          </p>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "p",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            9
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <p
                            className="key-value"
                          >
                            9
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": "9",
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "9",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "9",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 499,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 15,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 511,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 6,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 512,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 10,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "8",
                              "className": "key-value",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "8",
                              "className": "key-value",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="key-value"
                            >
                              8
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              8
                            </p>,
                            "className": "key-container number-key",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              8
                            </p>,
                            "className": "key-container number-key",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              8
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 1,
                        "key": "8",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "keyAction": [Function],
                          "keyType": "number-key",
                          "keyValue": "8",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyAction": [Function],
                          "keyType": "number-key",
                          "keyValue": "8",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 500,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                            "lineNumber": 15,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 513,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 514,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 10,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "7",
                                "className": "key-value",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "7",
                                "className": "key-value",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="key-value"
                              >
                                7
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                7
                              </p>,
                              "className": "key-container number-key",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                7
                              </p>,
                              "className": "key-container number-key",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="key-container number-key"
                            >
                              <p
                                class="key-value"
                              >
                                7
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 2,
                          "key": "7",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "keyAction": [Function],
                            "keyType": "number-key",
                            "keyValue": "7",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "keyAction": [Function],
                            "keyType": "number-key",
                            "keyValue": "7",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 501,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                              "lineNumber": 15,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 515,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 6,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 516,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 10,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "6",
                                  "className": "key-value",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "6",
                                  "className": "key-value",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p
                                  class="key-value"
                                >
                                  6
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  6
                                </p>,
                                "className": "key-container number-key",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  6
                                </p>,
                                "className": "key-container number-key",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="key-container number-key"
                              >
                                <p
                                  class="key-value"
                                >
                                  6
                                </p>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 3,
                            "key": "6",
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "keyAction": [Function],
                              "keyType": "number-key",
                              "keyValue": "6",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "keyAction": [Function],
                              "keyType": "number-key",
                              "keyValue": "6",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 502,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                "lineNumber": 15,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 517,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 6,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 518,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                    "lineNumber": 10,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "5",
                                    "className": "key-value",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "5",
                                    "className": "key-value",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p
                                    class="key-value"
                                  >
                                    5
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    5
                                  </p>,
                                  "className": "key-container number-key",
                                  "onClick": [Function],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    5
                                  </p>,
                                  "className": "key-container number-key",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="key-container number-key"
                                >
                                  <p
                                    class="key-value"
                                  >
                                    5
                                  </p>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 4,
                              "key": "5",
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "keyAction": [Function],
                                "keyType": "number-key",
                                "keyValue": "5",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "keyAction": [Function],
                                "keyType": "number-key",
                                "keyValue": "5",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 503,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                  "lineNumber": 15,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 519,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                    "lineNumber": 6,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 520,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                      "lineNumber": 10,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "p",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": "4",
                                      "className": "key-value",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": "4",
                                      "className": "key-value",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <p
                                      class="key-value"
                                    >
                                      4
                                    </p>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "p",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "div",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": <p
                                      className="key-value"
                                    >
                                      4
                                    </p>,
                                    "className": "key-container number-key",
                                    "onClick": [Function],
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": <p
                                      className="key-value"
                                    >
                                      4
                                    </p>,
                                    "className": "key-container number-key",
                                    "onClick": [Function],
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <div
                                    class="key-container number-key"
                                  >
                                    <p
                                      class="key-value"
                                    >
                                      4
                                    </p>
                                  </div>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "div",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 1,
                                "elementType": [Function],
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 5,
                                "key": "4",
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "keyAction": [Function],
                                  "keyType": "number-key",
                                  "keyValue": "4",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "keyAction": [Function],
                                  "keyType": "number-key",
                                  "keyValue": "4",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 504,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                    "lineNumber": 15,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 521,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                      "lineNumber": 6,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 522,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                        "lineNumber": 10,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "p",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": "3",
                                        "className": "key-value",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": "3",
                                        "className": "key-value",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <p
                                        class="key-value"
                                      >
                                        3
                                      </p>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "p",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 0,
                                    "elementType": "div",
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 0,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": <p
                                        className="key-value"
                                      >
                                        3
                                      </p>,
                                      "className": "key-container number-key",
                                      "onClick": [Function],
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": <p
                                        className="key-value"
                                      >
                                        3
                                      </p>,
                                      "className": "key-container number-key",
                                      "onClick": [Function],
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <div
                                      class="key-container number-key"
                                    >
                                      <p
                                        class="key-value"
                                      >
                                        3
                                      </p>
                                    </div>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "div",
                                    "updateQueue": null,
                                  },
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 1,
                                  "elementType": [Function],
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 6,
                                  "key": "3",
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "keyAction": [Function],
                                    "keyType": "number-key",
                                    "keyValue": "3",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "keyAction": [Function],
                                    "keyType": "number-key",
                                    "keyValue": "3",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugHookTypes": null,
                                    "_debugID": 505,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                      "lineNumber": 15,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 523,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                        "lineNumber": 6,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 524,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                          "lineNumber": 10,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "p",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 0,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": "2",
                                          "className": "key-value",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": "2",
                                          "className": "key-value",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <p
                                          class="key-value"
                                        >
                                          2
                                        </p>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "p",
                                        "updateQueue": null,
                                      },
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 0,
                                      "elementType": "div",
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 0,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "children": <p
                                          className="key-value"
                                        >
                                          2
                                        </p>,
                                        "className": "key-container number-key",
                                        "onClick": [Function],
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "children": <p
                                          className="key-value"
                                        >
                                          2
                                        </p>,
                                        "className": "key-container number-key",
                                        "onClick": [Function],
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": null,
                                      "stateNode": <div
                                        class="key-container number-key"
                                      >
                                        <p
                                          class="key-value"
                                        >
                                          2
                                        </p>
                                      </div>,
                                      "tag": 5,
                                      "treeBaseDuration": 0,
                                      "type": "div",
                                      "updateQueue": null,
                                    },
                                    "childExpirationTime": 0,
                                    "contextDependencies": null,
                                    "effectTag": 1,
                                    "elementType": [Function],
                                    "expirationTime": 0,
                                    "firstEffect": null,
                                    "index": 7,
                                    "key": "2",
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "keyAction": [Function],
                                      "keyType": "number-key",
                                      "keyValue": "2",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "keyAction": [Function],
                                      "keyType": "number-key",
                                      "keyValue": "2",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugHookTypes": null,
                                      "_debugID": 506,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": [Circular],
                                      "_debugSource": Object {
                                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                        "lineNumber": 15,
                                      },
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 525,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                          "lineNumber": 6,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 526,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                            "lineNumber": 10,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "p",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 0,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": "1",
                                            "className": "key-value",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": "1",
                                            "className": "key-value",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <p
                                            class="key-value"
                                          >
                                            1
                                          </p>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "p",
                                          "updateQueue": null,
                                        },
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 0,
                                        "elementType": "div",
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 0,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "children": <p
                                            className="key-value"
                                          >
                                            1
                                          </p>,
                                          "className": "key-container number-key",
                                          "onClick": [Function],
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "children": <p
                                            className="key-value"
                                          >
                                            1
                                          </p>,
                                          "className": "key-container number-key",
                                          "onClick": [Function],
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": null,
                                        "stateNode": <div
                                          class="key-container number-key"
                                        >
                                          <p
                                            class="key-value"
                                          >
                                            1
                                          </p>
                                        </div>,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "div",
                                        "updateQueue": null,
                                      },
                                      "childExpirationTime": 0,
                                      "contextDependencies": null,
                                      "effectTag": 1,
                                      "elementType": [Function],
                                      "expirationTime": 0,
                                      "firstEffect": null,
                                      "index": 8,
                                      "key": "1",
                                      "lastEffect": null,
                                      "memoizedProps": Object {
                                        "keyAction": [Function],
                                        "keyType": "number-key",
                                        "keyValue": "1",
                                      },
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": Object {
                                        "keyAction": [Function],
                                        "keyType": "number-key",
                                        "keyValue": "1",
                                      },
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugHookTypes": null,
                                        "_debugID": 507,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                          "lineNumber": 15,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 527,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                            "lineNumber": 6,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 528,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                              "lineNumber": 10,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "contextDependencies": null,
                                            "effectTag": 0,
                                            "elementType": "p",
                                            "expirationTime": 0,
                                            "firstEffect": null,
                                            "index": 0,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": "0",
                                              "className": "key-value",
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": "0",
                                              "className": "key-value",
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": <p
                                              class="key-value"
                                            >
                                              0
                                            </p>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "p",
                                            "updateQueue": null,
                                          },
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 0,
                                          "elementType": "div",
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 0,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "children": <p
                                              className="key-value"
                                            >
                                              0
                                            </p>,
                                            "className": "key-container number-key",
                                            "onClick": [Function],
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "children": <p
                                              className="key-value"
                                            >
                                              0
                                            </p>,
                                            "className": "key-container number-key",
                                            "onClick": [Function],
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": <div
                                            class="key-container number-key"
                                          >
                                            <p
                                              class="key-value"
                                            >
                                              0
                                            </p>
                                          </div>,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "div",
                                          "updateQueue": null,
                                        },
                                        "childExpirationTime": 0,
                                        "contextDependencies": null,
                                        "effectTag": 1,
                                        "elementType": [Function],
                                        "expirationTime": 0,
                                        "firstEffect": null,
                                        "index": 9,
                                        "key": "0",
                                        "lastEffect": null,
                                        "memoizedProps": Object {
                                          "keyAction": [Function],
                                          "keyType": "number-key",
                                          "keyValue": "0",
                                        },
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {
                                          "keyAction": [Function],
                                          "keyType": "number-key",
                                          "keyValue": "0",
                                        },
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugHookTypes": null,
                                          "_debugID": 508,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                            "lineNumber": 15,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": FiberNode {
                                            "_debugHookTypes": null,
                                            "_debugID": 529,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": [Circular],
                                            "_debugSource": Object {
                                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                              "lineNumber": 6,
                                            },
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": FiberNode {
                                              "_debugHookTypes": null,
                                              "_debugID": 530,
                                              "_debugIsCurrentlyTiming": false,
                                              "_debugOwner": [Circular],
                                              "_debugSource": Object {
                                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                                "lineNumber": 10,
                                              },
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childExpirationTime": 0,
                                              "contextDependencies": null,
                                              "effectTag": 0,
                                              "elementType": "p",
                                              "expirationTime": 0,
                                              "firstEffect": null,
                                              "index": 0,
                                              "key": null,
                                              "lastEffect": null,
                                              "memoizedProps": Object {
                                                "children": "ce",
                                                "className": "key-value",
                                              },
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": Object {
                                                "children": "ce",
                                                "className": "key-value",
                                              },
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": <p
                                                class="key-value"
                                              >
                                                ce
                                              </p>,
                                              "tag": 5,
                                              "treeBaseDuration": 0,
                                              "type": "p",
                                              "updateQueue": null,
                                            },
                                            "childExpirationTime": 0,
                                            "contextDependencies": null,
                                            "effectTag": 0,
                                            "elementType": "div",
                                            "expirationTime": 0,
                                            "firstEffect": null,
                                            "index": 0,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": Object {
                                              "children": <p
                                                className="key-value"
                                              >
                                                ce
                                              </p>,
                                              "className": "key-container number-key",
                                              "onClick": [Function],
                                            },
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": Object {
                                              "children": <p
                                                className="key-value"
                                              >
                                                ce
                                              </p>,
                                              "className": "key-container number-key",
                                              "onClick": [Function],
                                            },
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": <div
                                              class="key-container number-key"
                                            >
                                              <p
                                                class="key-value"
                                              >
                                                ce
                                              </p>
                                            </div>,
                                            "tag": 5,
                                            "treeBaseDuration": 0,
                                            "type": "div",
                                            "updateQueue": null,
                                          },
                                          "childExpirationTime": 0,
                                          "contextDependencies": null,
                                          "effectTag": 1,
                                          "elementType": [Function],
                                          "expirationTime": 0,
                                          "firstEffect": null,
                                          "index": 10,
                                          "key": "ce",
                                          "lastEffect": null,
                                          "memoizedProps": Object {
                                            "keyAction": [Function],
                                            "keyType": "number-key",
                                            "keyValue": "ce",
                                          },
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {
                                            "keyAction": [Function],
                                            "keyType": "number-key",
                                            "keyValue": "ce",
                                          },
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": null,
                                          "stateNode": null,
                                          "tag": 0,
                                          "treeBaseDuration": 0,
                                          "type": [Function],
                                          "updateQueue": null,
                                        },
                                        "stateNode": null,
                                        "tag": 0,
                                        "treeBaseDuration": 0,
                                        "type": [Function],
                                        "updateQueue": null,
                                      },
                                      "stateNode": null,
                                      "tag": 0,
                                      "treeBaseDuration": 0,
                                      "type": [Function],
                                      "updateQueue": null,
                                    },
                                    "stateNode": null,
                                    "tag": 0,
                                    "treeBaseDuration": 0,
                                    "type": [Function],
                                    "updateQueue": null,
                                  },
                                  "stateNode": null,
                                  "tag": 0,
                                  "treeBaseDuration": 0,
                                  "type": [Function],
                                  "updateQueue": null,
                                },
                                "stateNode": null,
                                "tag": 0,
                                "treeBaseDuration": 0,
                                "type": [Function],
                                "updateQueue": null,
                              },
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "stateNode": null,
                      "tag": 0,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "contextDependencies": null,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="9"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="8"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="7"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="6"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="5"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="4"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="3"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="2"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="1"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="0"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="ce"
                        />,
                      ],
                      "className": "numbers-container",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="9"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="8"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="7"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="6"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="5"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="4"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="3"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="2"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="1"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="0"
                        />,
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="ce"
                        />,
                      ],
                      "className": "numbers-container",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 496,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                        "lineNumber": 37,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 531,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 24,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 535,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                            "lineNumber": 6,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 536,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 10,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "p",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "/",
                              "className": "key-value",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "/",
                              "className": "key-value",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <p
                              class="key-value"
                            >
                              /
                            </p>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "p",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              /
                            </p>,
                            "className": "key-container operator-key",
                            "onClick": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": <p
                              className="key-value"
                            >
                              /
                            </p>,
                            "className": "key-container operator-key",
                            "onClick": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              /
                            </p>
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 1,
                        "elementType": [Function],
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": "/",
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "keyAction": [Function],
                          "keyType": "operator-key",
                          "keyValue": "/",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "keyAction": [Function],
                          "keyType": "operator-key",
                          "keyValue": "/",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 532,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                            "lineNumber": 24,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 537,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 538,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 10,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "x",
                                "className": "key-value",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "x",
                                "className": "key-value",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="key-value"
                              >
                                x
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                x
                              </p>,
                              "className": "key-container operator-key",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                x
                              </p>,
                              "className": "key-container operator-key",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="key-container operator-key"
                            >
                              <p
                                class="key-value"
                              >
                                x
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 1,
                          "key": "x",
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "keyAction": [Function],
                            "keyType": "operator-key",
                            "keyValue": "x",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "keyAction": [Function],
                            "keyType": "operator-key",
                            "keyValue": "x",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 533,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                              "lineNumber": 24,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 539,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 6,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 540,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 10,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "p",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "-",
                                  "className": "key-value",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "-",
                                  "className": "key-value",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <p
                                  class="key-value"
                                >
                                  -
                                </p>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "p",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "div",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  -
                                </p>,
                                "className": "key-container operator-key",
                                "onClick": [Function],
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": <p
                                  className="key-value"
                                >
                                  -
                                </p>,
                                "className": "key-container operator-key",
                                "onClick": [Function],
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <div
                                class="key-container operator-key"
                              >
                                <p
                                  class="key-value"
                                >
                                  -
                                </p>
                              </div>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "div",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 1,
                            "elementType": [Function],
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 2,
                            "key": "-",
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "keyAction": [Function],
                              "keyType": "operator-key",
                              "keyValue": "-",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "keyAction": [Function],
                              "keyType": "operator-key",
                              "keyValue": "-",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 534,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                                "lineNumber": 24,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": FiberNode {
                                "_debugHookTypes": null,
                                "_debugID": 541,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                  "lineNumber": 6,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": FiberNode {
                                  "_debugHookTypes": null,
                                  "_debugID": 542,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                    "lineNumber": 10,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "contextDependencies": null,
                                  "effectTag": 0,
                                  "elementType": "p",
                                  "expirationTime": 0,
                                  "firstEffect": null,
                                  "index": 0,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "+",
                                    "className": "key-value",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "+",
                                    "className": "key-value",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <p
                                    class="key-value"
                                  >
                                    +
                                  </p>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "p",
                                  "updateQueue": null,
                                },
                                "childExpirationTime": 0,
                                "contextDependencies": null,
                                "effectTag": 0,
                                "elementType": "div",
                                "expirationTime": 0,
                                "firstEffect": null,
                                "index": 0,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    +
                                  </p>,
                                  "className": "key-container operator-key",
                                  "onClick": [Function],
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": <p
                                    className="key-value"
                                  >
                                    +
                                  </p>,
                                  "className": "key-container operator-key",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <div
                                  class="key-container operator-key"
                                >
                                  <p
                                    class="key-value"
                                  >
                                    +
                                  </p>
                                </div>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "div",
                                "updateQueue": null,
                              },
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 1,
                              "elementType": [Function],
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 3,
                              "key": "+",
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "keyAction": [Function],
                                "keyType": "operator-key",
                                "keyValue": "+",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "keyAction": [Function],
                                "keyType": "operator-key",
                                "keyValue": "+",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": null,
                              "tag": 0,
                              "treeBaseDuration": 0,
                              "type": [Function],
                              "updateQueue": null,
                            },
                            "stateNode": null,
                            "tag": 0,
                            "treeBaseDuration": 0,
                            "type": [Function],
                            "updateQueue": null,
                          },
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "stateNode": null,
                        "tag": 0,
                        "treeBaseDuration": 0,
                        "type": [Function],
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "contextDependencies": null,
                      "effectTag": 0,
                      "elementType": "div",
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="/"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="x"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="-"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="+"
                          />,
                        ],
                        "className": "operators-container",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="/"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="x"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="-"
                          />,
                          <Key
                            keyAction={[Function]}
                            keyType="operator-key"
                            keyValue="+"
                          />,
                        ],
                        "className": "operators-container",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 497,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                          "lineNumber": 40,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 543,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Keypad\\\\Keypad.jsx",
                            "lineNumber": 41,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugHookTypes": null,
                            "_debugID": 544,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                              "lineNumber": 6,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": FiberNode {
                              "_debugHookTypes": null,
                              "_debugID": 545,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "C:\\\\react-calculator\\\\src\\\\components\\\\Key\\\\Key.jsx",
                                "lineNumber": 10,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "contextDependencies": null,
                              "effectTag": 0,
                              "elementType": "p",
                              "expirationTime": 0,
                              "firstEffect": null,
                              "index": 0,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "=",
                                "className": "key-value",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "=",
                                "className": "key-value",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <p
                                class="key-value"
                              >
                                =
                              </p>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "p",
                              "updateQueue": null,
                            },
                            "childExpirationTime": 0,
                            "contextDependencies": null,
                            "effectTag": 0,
                            "elementType": "div",
                            "expirationTime": 0,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                =
                              </p>,
                              "className": "key-container submit-key",
                              "onClick": [Function],
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": <p
                                className="key-value"
                              >
                                =
                              </p>,
                              "className": "key-container submit-key",
                              "onClick": [Function],
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <div
                              class="key-container submit-key"
                            >
                              <p
                                class="key-value"
                              >
                                =
                              </p>
                            </div>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "div",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "contextDependencies": null,
                          "effectTag": 1,
                          "elementType": [Function],
                          "expirationTime": 0,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "keyAction": [Function],
                            "keyType": "submit-key",
                            "keyValue": "=",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "keyAction": [Function],
                            "keyType": "submit-key",
                            "keyValue": "=",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": null,
                          "tag": 0,
                          "treeBaseDuration": 0,
                          "type": [Function],
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "contextDependencies": null,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": <Key
                            keyAction={[Function]}
                            keyType="submit-key"
                            keyValue="="
                          />,
                          "className": "submit-container",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": <Key
                            keyAction={[Function]}
                            keyType="submit-key"
                            keyValue="="
                          />,
                          "className": "submit-container",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="submit-container"
                        >
                          <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "div",
                      "updateQueue": null,
                    },
                    "stateNode": <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "contextDependencies": null,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div
                        className="numbers-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="9"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="8"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="7"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="6"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="5"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="4"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="3"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="2"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="1"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="0"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="ce"
                        />
                      </div>,
                      <div
                        className="operators-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="/"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="x"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="-"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="+"
                        />
                      </div>,
                      <div
                        className="submit-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="submit-key"
                          keyValue="="
                        />
                      </div>,
                    ],
                    "className": "keypad-container",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div
                        className="numbers-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="9"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="8"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="7"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="6"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="5"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="4"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="3"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="2"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="1"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="0"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="number-key"
                          keyValue="ce"
                        />
                      </div>,
                      <div
                        className="operators-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="/"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="x"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="-"
                        />
                        <Key
                          keyAction={[Function]}
                          keyType="operator-key"
                          keyValue="+"
                        />
                      </div>,
                      <div
                        className="submit-container"
                      >
                        <Key
                          keyAction={[Function]}
                          keyType="submit-key"
                          keyValue="="
                        />
                      </div>,
                    ],
                    "className": "keypad-container",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="keypad-container"
                  >
                    <div
                      class="numbers-container"
                    >
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          9
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          8
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          7
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          6
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          5
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          4
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          3
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          2
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          1
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="key-container number-key"
                      >
                        <p
                          class="key-value"
                        >
                          ce
                        </p>
                      </div>
                    </div>
                    <div
                      class="operators-container"
                    >
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          /
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          x
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          -
                        </p>
                      </div>
                      <div
                        class="key-container operator-key"
                      >
                        <p
                          class="key-value"
                        >
                          +
                        </p>
                      </div>
                    </div>
                    <div
                      class="submit-container"
                    >
                      <div
                        class="key-container submit-key"
                      >
                        <p
                          class="key-value"
                        >
                          =
                        </p>
                      </div>
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "callOperator": [Function],
                  "numbers": Array [
                    "9",
                    "8",
                    "7",
                    "6",
                    "5",
                    "4",
                    "3",
                    "2",
                    "1",
                    "0",
                    "ce",
                  ],
                  "operators": Array [
                    "/",
                    "x",
                    "-",
                    "+",
                  ],
                  "setOperator": [Function],
                  "updateDisplay": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "callOperator": [Function],
                  "numbers": Array [
                    "9",
                    "8",
                    "7",
                    "6",
                    "5",
                    "4",
                    "3",
                    "2",
                    "1",
                    "0",
                    "ce",
                  ],
                  "operators": Array [
                    "/",
                    "x",
                    "-",
                    "+",
                  ],
                  "setOperator": [Function],
                  "updateDisplay": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 0,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": null,
              },
              "stateNode": null,
              "tag": 0,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <Display
                  displayValue="0"
                />,
                <Keypad
                  callOperator={[Function]}
                  numbers={
                    Array [
                      "9",
                      "8",
                      "7",
                      "6",
                      "5",
                      "4",
                      "3",
                      "2",
                      "1",
                      "0",
                      "ce",
                    ]
                  }
                  operators={
                    Array [
                      "/",
                      "x",
                      "-",
                      "+",
                    ]
                  }
                  setOperator={[Function]}
                  updateDisplay={[Function]}
                />,
              ],
              "className": "calculator-container",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <Display
                  displayValue="0"
                />,
                <Keypad
                  callOperator={[Function]}
                  numbers={
                    Array [
                      "9",
                      "8",
                      "7",
                      "6",
                      "5",
                      "4",
                      "3",
                      "2",
                      "1",
                      "0",
                      "ce",
                    ]
                  }
                  operators={
                    Array [
                      "/",
                      "x",
                      "-",
                      "+",
                    ]
                  }
                  setOperator={[Function]}
                  updateDisplay={[Function]}
                />,
              ],
              "className": "calculator-container",
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div
              class="calculator-container"
            >
              <div
                class="display-container"
              >
                <p
                  class="display-value"
                >
                  0
                </p>
              </div>
              <div
                class="keypad-container"
              >
                <div
                  class="numbers-container"
                >
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      9
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      8
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      7
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      6
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      5
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      4
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      3
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      2
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      1
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      ce
                    </p>
                  </div>
                </div>
                <div
                  class="operators-container"
                >
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      /
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      x
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      -
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      +
                    </p>
                  </div>
                </div>
                <div
                  class="submit-container"
                >
                  <div
                    class="key-container submit-key"
                  >
                    <p
                      class="key-value"
                    >
                      =
                    </p>
                  </div>
                </div>
              </div>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "contextDependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {},
          "memoizedState": Object {
            "displayValue": "0",
            "numbers": Array [
              "9",
              "8",
              "7",
              "6",
              "5",
              "4",
              "3",
              "2",
              "1",
              "0",
              "ce",
            ],
            "operators": Array [
              "/",
              "x",
              "-",
              "+",
            ],
            "selectedOperator": "",
            "storedValue": "",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {},
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 487,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "contextDependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 485,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="calculator-container"
                    >
                      <div
                        class="display-container"
                      >
                        <p
                          class="display-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="keypad-container"
                      >
                        <div
                          class="numbers-container"
                        >
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              9
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              8
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              7
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              6
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              5
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              4
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              3
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              2
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              1
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              0
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              ce
                            </p>
                          </div>
                        </div>
                        <div
                          class="operators-container"
                        >
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              /
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              x
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              -
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              +
                            </p>
                          </div>
                        </div>
                        <div
                          class="submit-container"
                        >
                          <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 20,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {},
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 485,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 485,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "contextDependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div
                      class="calculator-container"
                    >
                      <div
                        class="display-container"
                      >
                        <p
                          class="display-value"
                        >
                          0
                        </p>
                      </div>
                      <div
                        class="keypad-container"
                      >
                        <div
                          class="numbers-container"
                        >
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              9
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              8
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              7
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              6
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              5
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              4
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              3
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              2
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              1
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              0
                            </p>
                          </div>
                          <div
                            class="key-container number-key"
                          >
                            <p
                              class="key-value"
                            >
                              ce
                            </p>
                          </div>
                        </div>
                        <div
                          class="operators-container"
                        >
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              /
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              x
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              -
                            </p>
                          </div>
                          <div
                            class="key-container operator-key"
                          >
                            <p
                              class="key-value"
                            >
                              +
                            </p>
                          </div>
                        </div>
                        <div
                          class="submit-container"
                        >
                          <div
                            class="key-container submit-key"
                          >
                            <p
                              class="key-value"
                            >
                              =
                            </p>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 20,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={Object {}}
                        wrappingComponentProps={null}
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "contextDependencies": null,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={Object {}}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div
                    class="calculator-container"
                  >
                    <div
                      class="display-container"
                    >
                      <p
                        class="display-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="keypad-container"
                    >
                      <div
                        class="numbers-container"
                      >
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>
                        <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>
                      </div>
                      <div
                        class="operators-container"
                      >
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>
                        <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>
                      </div>
                      <div
                        class="submit-container"
                      >
                        <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 20,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={Object {}}
                    wrappingComponentProps={null}
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "rootFinderInstance": null,
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {},
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "callOperator": [Function],
        "context": Object {},
        "props": Object {},
        "refs": Object {},
        "render": [Function],
        "setOperator": [Function],
        "state": Object {
          "displayValue": "0",
          "numbers": Array [
            "9",
            "8",
            "7",
            "6",
            "5",
            "4",
            "3",
            "2",
            "1",
            "0",
            "ce",
          ],
          "operators": Array [
            "/",
            "x",
            "-",
            "+",
          ],
          "selectedOperator": "",
          "storedValue": "",
        },
        "updateDisplay": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {},
      "ref": null,
      "rendered": Object {
        "instance": <div
          class="calculator-container"
        >
          <div
            class="display-container"
          >
            <p
              class="display-value"
            >
              0
            </p>
          </div>
          <div
            class="keypad-container"
          >
            <div
              class="numbers-container"
            >
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  9
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  8
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  7
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  6
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  5
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  4
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  3
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  2
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  1
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  0
                </p>
              </div>
              <div
                class="key-container number-key"
              >
                <p
                  class="key-value"
                >
                  ce
                </p>
              </div>
            </div>
            <div
              class="operators-container"
            >
              <div
                class="key-container operator-key"
              >
                <p
                  class="key-value"
                >
                  /
                </p>
              </div>
              <div
                class="key-container operator-key"
              >
                <p
                  class="key-value"
                >
                  x
                </p>
              </div>
              <div
                class="key-container operator-key"
              >
                <p
                  class="key-value"
                >
                  -
                </p>
              </div>
              <div
                class="key-container operator-key"
              >
                <p
                  class="key-value"
                >
                  +
                </p>
              </div>
            </div>
            <div
              class="submit-container"
            >
              <div
                class="key-container submit-key"
              >
                <p
                  class="key-value"
                >
                  =
                </p>
              </div>
            </div>
          </div>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Display
              displayValue="0"
            />,
            <Keypad
              callOperator={[Function]}
              numbers={
                Array [
                  "9",
                  "8",
                  "7",
                  "6",
                  "5",
                  "4",
                  "3",
                  "2",
                  "1",
                  "0",
                  "ce",
                ]
              }
              operators={
                Array [
                  "/",
                  "x",
                  "-",
                  "+",
                ]
              }
              setOperator={[Function]}
              updateDisplay={[Function]}
            />,
          ],
          "className": "calculator-container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "displayValue": "0",
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="display-container"
              >
                <p
                  class="display-value"
                >
                  0
                </p>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <p
                  className="display-value"
                >
                  0
                </p>,
                "className": "display-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <p
                    class="display-value"
                  >
                    0
                  </p>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "0",
                    "className": "display-value",
                  },
                  "ref": null,
                  "rendered": Array [
                    "0",
                  ],
                  "type": "p",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "callOperator": [Function],
              "numbers": Array [
                "9",
                "8",
                "7",
                "6",
                "5",
                "4",
                "3",
                "2",
                "1",
                "0",
                "ce",
              ],
              "operators": Array [
                "/",
                "x",
                "-",
                "+",
              ],
              "setOperator": [Function],
              "updateDisplay": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": <div
                class="keypad-container"
              >
                <div
                  class="numbers-container"
                >
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      9
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      8
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      7
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      6
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      5
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      4
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      3
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      2
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      1
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      0
                    </p>
                  </div>
                  <div
                    class="key-container number-key"
                  >
                    <p
                      class="key-value"
                    >
                      ce
                    </p>
                  </div>
                </div>
                <div
                  class="operators-container"
                >
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      /
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      x
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      -
                    </p>
                  </div>
                  <div
                    class="key-container operator-key"
                  >
                    <p
                      class="key-value"
                    >
                      +
                    </p>
                  </div>
                </div>
                <div
                  class="submit-container"
                >
                  <div
                    class="key-container submit-key"
                  >
                    <p
                      class="key-value"
                    >
                      =
                    </p>
                  </div>
                </div>
              </div>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="numbers-container"
                  >
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="9"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="8"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="7"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="6"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="5"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="4"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="3"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="2"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="1"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="0"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="number-key"
                      keyValue="ce"
                    />
                  </div>,
                  <div
                    className="operators-container"
                  >
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="/"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="x"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="-"
                    />
                    <Key
                      keyAction={[Function]}
                      keyType="operator-key"
                      keyValue="+"
                    />
                  </div>,
                  <div
                    className="submit-container"
                  >
                    <Key
                      keyAction={[Function]}
                      keyType="submit-key"
                      keyValue="="
                    />
                  </div>,
                ],
                "className": "keypad-container",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div
                    class="numbers-container"
                  >
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        9
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        8
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        7
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        6
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        5
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        4
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        3
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        2
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        1
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        0
                      </p>
                    </div>
                    <div
                      class="key-container number-key"
                    >
                      <p
                        class="key-value"
                      >
                        ce
                      </p>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="9"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="8"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="7"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="6"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="5"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="4"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="3"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="2"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="1"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="0"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="number-key"
                        keyValue="ce"
                      />,
                    ],
                    "className": "numbers-container",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "9",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "9",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            9
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            9
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              9
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "9",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "9",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "8",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "8",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            8
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            8
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              8
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "8",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "8",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "7",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "7",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            7
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            7
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              7
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "7",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "7",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "6",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "6",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            6
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            6
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              6
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "6",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "6",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "5",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "5",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            5
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            5
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              5
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "5",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "5",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "4",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "4",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            4
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            4
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              4
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "4",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "4",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "3",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "3",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            3
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            3
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              3
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "3",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "3",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "2",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            2
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            2
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              2
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "2",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "2",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "1",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            1
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            1
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              1
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "1",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "1",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "0",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            0
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            0
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              0
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "0",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "0",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "ce",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "number-key",
                        "keyValue": "ce",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container number-key"
                        >
                          <p
                            class="key-value"
                          >
                            ce
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            ce
                          </p>,
                          "className": "key-container number-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              ce
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "ce",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "ce",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="operators-container"
                  >
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        /
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        x
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        -
                      </p>
                    </div>
                    <div
                      class="key-container operator-key"
                    >
                      <p
                        class="key-value"
                      >
                        +
                      </p>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="/"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="x"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="-"
                      />,
                      <Key
                        keyAction={[Function]}
                        keyType="operator-key"
                        keyValue="+"
                      />,
                    ],
                    "className": "operators-container",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "/",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "/",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            /
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            /
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              /
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "/",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "/",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "x",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "x",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            x
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            x
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              x
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "x",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "x",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "-",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "-",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            -
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            -
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              -
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "-",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "-",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "+",
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "operator-key",
                        "keyValue": "+",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container operator-key"
                        >
                          <p
                            class="key-value"
                          >
                            +
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            +
                          </p>,
                          "className": "key-container operator-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              +
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "+",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "+",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <div
                    class="submit-container"
                  >
                    <div
                      class="key-container submit-key"
                    >
                      <p
                        class="key-value"
                      >
                        =
                      </p>
                    </div>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <Key
                      keyAction={[Function]}
                      keyType="submit-key"
                      keyValue="="
                    />,
                    "className": "submit-container",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "function",
                      "props": Object {
                        "keyAction": [Function],
                        "keyType": "submit-key",
                        "keyValue": "=",
                      },
                      "ref": null,
                      "rendered": Object {
                        "instance": <div
                          class="key-container submit-key"
                        >
                          <p
                            class="key-value"
                          >
                            =
                          </p>
                        </div>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <p
                            className="key-value"
                          >
                            =
                          </p>,
                          "className": "key-container submit-key",
                          "onClick": [Function],
                        },
                        "ref": null,
                        "rendered": Array [
                          Object {
                            "instance": <p
                              class="key-value"
                            >
                              =
                            </p>,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "=",
                              "className": "key-value",
                            },
                            "ref": null,
                            "rendered": Array [
                              "=",
                            ],
                            "type": "p",
                          },
                        ],
                        "type": "div",
                      },
                      "type": [Function],
                    },
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
